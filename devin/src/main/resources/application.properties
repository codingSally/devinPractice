# Server configuration
server.port=8081

# Database configuration
spring.datasource.url=jdbc:h2:mem:calligraphy_db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# MyBatis configuration
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.example.devin.model

# JWT configuration
jwt.secret=${JWT_SECRET:${random.uuid}}
jwt.expiration=86400000

# Initialize schema and data
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:sql/schema.sql

# LLM API Configuration
# The application will automatically try multiple endpoints if the configured one fails
# You can set these via environment variables or modify them directly here

# Default configuration - will use intelligent fallback if API calls fail
llm.api.url=${LLM_API_URL:http://localhost:11434/v1/chat/completions}
llm.api.key=${LLM_API_KEY:}
llm.api.model=${LLM_API_MODEL:llama2}

# Alternative configurations:
# For local Ollama (recommended for China, requires installation):
# llm.api.url=http://localhost:11434/v1/chat/completions
# llm.api.model=llama2

# For ChatAnywhere API (may work in China):
# llm.api.url=https://api.chatanywhere.com.cn/v1/chat/completions
# llm.api.model=gpt-3.5-turbo
